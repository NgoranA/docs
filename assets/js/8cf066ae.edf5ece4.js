"use strict";(self.webpackChunkplatformatic_oss_website=self.webpackChunkplatformatic_oss_website||[]).push([[77082],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var i=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=i.createContext({}),s=function(e){var t=i.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=s(e.components);return i.createElement(p.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},f=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=s(n),f=a,m=u["".concat(p,".").concat(f)]||u[f]||d[f]||r;return n?i.createElement(m,o(o({ref:t},c),{},{components:n})):i.createElement(m,o({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,o=new Array(r);o[0]=f;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[u]="string"==typeof e?e:a,o[1]=l;for(var s=2;s<r;s++)o[s]=n[s];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}f.displayName="MDXCreateElement"},49062:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>l,toc:()=>s});var i=n(87462),a=(n(67294),n(3905));const r={},o="Plugin",l={unversionedId:"reference/db/plugin",id:"version-0.35.0/reference/db/plugin",title:"Plugin",description:"If you want to extend Platformatic DB features, it is possible to register a plugin, which will be in the form of a standard Fastify plugin.",source:"@site/versioned_docs/version-0.35.0/reference/db/plugin.md",sourceDirName:"reference/db",slug:"/reference/db/plugin",permalink:"/docs/0.35.0/reference/db/plugin",draft:!1,editUrl:"https://github.com/platformatic/oss/edit/main/versioned_docs/version-0.35.0/reference/db/plugin.md",tags:[],version:"0.35.0",frontMatter:{},sidebar:"docs",previous:{title:"Rules",permalink:"/docs/0.35.0/reference/db/authorization/rules"},next:{title:"Logging",permalink:"/docs/0.35.0/reference/db/logging"}},p={},s=[{value:"Hot Reload",id:"hot-reload",level:2},{value:"Directories",id:"directories",level:2},{value:"Multiple plugins",id:"multiple-plugins",level:2},{value:"TypeScript and autocompletion",id:"typescript-and-autocompletion",level:2},{value:"Plugin definition with TypeScript",id:"plugin-definition-with-typescript",level:3}],c={toc:s},u="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,i.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"plugin"},"Plugin"),(0,a.kt)("p",null,"If you want to extend Platformatic DB features, it is possible to register a plugin, which will be in the form of a standard ",(0,a.kt)("a",{parentName:"p",href:"https://fastify.io"},"Fastify")," plugin."),(0,a.kt)("p",null,"The config file will specify where the plugin file is located as the example below:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  ...\n  "plugins": {\n    "paths": ["./plugin/index.js"]\n  }\n}\n')),(0,a.kt)("p",null,"The paths are relative to the config file path."),(0,a.kt)("p",null,"Once the config file is set up, you can write your plugin to extend Platformatic DB API or write your custom business logic."),(0,a.kt)("p",null,"You should export an async ",(0,a.kt)("inlineCode",{parentName:"p"},"function")," which receives a parameters"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"app")," (",(0,a.kt)("inlineCode",{parentName:"li"},"FastifyInstance"),") that is the main fastify ",(0,a.kt)("a",{parentName:"li",href:"https://www.fastify.io/docs/latest/Reference/Server/#instance"},"instance")," running Platformatic DB"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"opts")," all the options specified in the config file after ",(0,a.kt)("inlineCode",{parentName:"li"},"path")),(0,a.kt)("li",{parentName:"ul"},"You can always access Platformatic ",(0,a.kt)("a",{parentName:"li",href:"/docs/0.35.0/reference/sql-mapper/introduction"},"data mapper")," through ",(0,a.kt)("inlineCode",{parentName:"li"},"app.platformatic")," property.")),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"To make sure that a user has the appropriate set of permissions to perform any action on an entity the ",(0,a.kt)("inlineCode",{parentName:"p"},"context")," should be passed to the ",(0,a.kt)("inlineCode",{parentName:"p"},"entity mapper")," operation like this:"),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-js"},"app.post('/', async (req, reply) => {\n  const ctx = req.createPlatformaticCtx()\n\n  await app.platformatic.entities.movies.find({\n    where: { /*...*/ },\n    ctx\n  })\n})\n"))),(0,a.kt)("p",null,"Check some ",(0,a.kt)("a",{parentName:"p",href:"/docs/0.35.0/guides/add-custom-functionality/introduction"},"examples"),"."),(0,a.kt)("h2",{id:"hot-reload"},"Hot Reload"),(0,a.kt)("p",null,"Plugin file is being watched by ",(0,a.kt)("a",{parentName:"p",href:"https://nodejs.org/api/fs.html#fspromiseswatchfilename-options"},(0,a.kt)("inlineCode",{parentName:"a"},"fs.watch"))," function."),(0,a.kt)("p",null,"You don't need to reload Platformatic DB server while working on your plugin. Every time you save, the watcher will trigger a reload event and the server will auto-restart and load your updated code."),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"At this time, on Linux, file watch in subdirectories is not supported due to a Node.js limitation (documented ",(0,a.kt)("a",{parentName:"p",href:"https://nodejs.org/api/fs.html#caveats"},"here"),").")),(0,a.kt)("h2",{id:"directories"},"Directories"),(0,a.kt)("p",null,"The path can also be a directory. In that case, the directory will be loaded with ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/fastify/fastify-autoload"},(0,a.kt)("inlineCode",{parentName:"a"},"@fastify/autoload")),"."),(0,a.kt)("p",null,"Consider the following directory structure:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"\u251c\u2500\u2500 routes\n\u2502   \u251c\u2500\u2500 foo\n\u2502   \u2502   \u251c\u2500\u2500 something.js\n\u2502   \u2502   \u2514\u2500\u2500 bar\n\u2502   \u2502       \u2514\u2500\u2500 baz.js\n\u2502   \u251c\u2500\u2500 single-plugin\n\u2502   \u2502   \u2514\u2500\u2500 utils.js\n\u2502   \u2514\u2500\u2500 another-plugin.js\n\u2514\u2500\u2500 platformatic.service.json\n")),(0,a.kt)("p",null,"By default the folder will be added as a prefix to all the routes defined within them.\nSee the autoload documentation for all the options to customize this behavior."),(0,a.kt)("h2",{id:"multiple-plugins"},"Multiple plugins"),(0,a.kt)("p",null,"Multiple plugins can be loaded in parallel by specifying an array:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  ...\n  "plugins": {\n    "paths": [{\n      "path": "./plugin/index.js"\n    }, {\n      "path": "./routes/"\n    }]\n  }\n}\n')),(0,a.kt)("p",null,"fastify.swagger()"),(0,a.kt)("h2",{id:"typescript-and-autocompletion"},"TypeScript and autocompletion"),(0,a.kt)("p",null,"If you want to access any of the types provided by Platformatic DB, generate them using the ",(0,a.kt)("inlineCode",{parentName:"p"},"platformatic db types")," command.\nThis will create a ",(0,a.kt)("inlineCode",{parentName:"p"},"global.d.ts")," file that you can now import everywhere, like so:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'/// <references <types="./global.d.ts" />\n')),(0,a.kt)("p",null,"Remember to adjust the path to ",(0,a.kt)("inlineCode",{parentName:"p"},"global.d.ts"),"."),(0,a.kt)("h3",{id:"plugin-definition-with-typescript"},"Plugin definition with TypeScript"),(0,a.kt)("p",null,"Here is an example of writing a plugin in TypeScript:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"/// <reference types=\"./global.d.ts\" />\nimport { FastifyInstance, FastifyPluginOptions } from 'fastify'\n\nexport default async function (fastify: FastifyInstance, opts: FastifyPluginOptions) {\n}\n")),(0,a.kt)("p",null,"Note that you need to add the ",(0,a.kt)("inlineCode",{parentName:"p"},'"typescript": true')," configuration to your ",(0,a.kt)("inlineCode",{parentName:"p"},"platformatic.service.json"),"."))}d.isMDXComponent=!0}}]);