"use strict";(self.webpackChunkplatformatic_oss_website=self.webpackChunkplatformatic_oss_website||[]).push([[77455],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>d});var i=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=i.createContext({}),p=function(e){var t=i.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=p(e.components);return i.createElement(c.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},f=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),m=p(n),f=r,d=m["".concat(c,".").concat(f)]||m[f]||u[f]||a;return n?i.createElement(d,o(o({ref:t},s),{},{components:n})):i.createElement(d,o({ref:t},s))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=f;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[m]="string"==typeof e?e:r,o[1]=l;for(var p=2;p<a;p++)o[p]=n[p];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}f.displayName="MDXCreateElement"},59066:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var i=n(87462),r=(n(67294),n(3905));const a={},o="Platformatic Runtime",l={unversionedId:"reference/runtime/introduction",id:"version-0.34.1/reference/runtime/introduction",title:"Platformatic Runtime",description:"Platformatic Runtime is an environment for running multiple Platformatic",source:"@site/versioned_docs/version-0.34.1/reference/runtime/introduction.md",sourceDirName:"reference/runtime",slug:"/reference/runtime/introduction",permalink:"/docs/0.34.1/reference/runtime/introduction",draft:!1,editUrl:"https://github.com/platformatic/oss/edit/main/versioned_docs/version-0.34.1/reference/runtime/introduction.md",tags:[],version:"0.34.1",frontMatter:{},sidebar:"docs",previous:{title:"Schema support",permalink:"/docs/0.34.1/reference/db/schema-support"},next:{title:"Platformatic Runtime",permalink:"/docs/0.34.1/reference/runtime/introduction"}},c={},p=[{value:"Features",id:"features",level:2},{value:"Public beta",id:"public-beta",level:2},{value:"Standalone usage",id:"standalone-usage",level:2},{value:"Example configuration file",id:"example-configuration-file",level:2},{value:"TypeScript Compilation",id:"typescript-compilation",level:2},{value:"Interservice communication",id:"interservice-communication",level:2}],s={toc:p},m="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(m,(0,i.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"platformatic-runtime"},"Platformatic Runtime"),(0,r.kt)("p",null,"Platformatic Runtime is an environment for running multiple Platformatic\nmicroservices as a single monolithic deployment unit."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Platformatic Runtime is currently in ",(0,r.kt)("a",{parentName:"p",href:"#public-beta"},"public beta"),".")),(0,r.kt)("h2",{id:"features"},"Features"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Command-line interface: ",(0,r.kt)("a",{parentName:"li",href:"/docs/0.34.1/reference/cli#runtime"},(0,r.kt)("inlineCode",{parentName:"a"},"platformatic runtime"))),(0,r.kt)("li",{parentName:"ul"},"Start Platformatic Runtime ",(0,r.kt)("a",{parentName:"li",href:"/docs/0.34.1/reference/runtime/programmatic"},"programmatically")," in tests or other applications"),(0,r.kt)("li",{parentName:"ul"},"Support for monorepo-based applications."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#interservice-communication"},"Interservice communication")," using private message passing.")),(0,r.kt)("h2",{id:"public-beta"},"Public beta"),(0,r.kt)("p",null,"Platformatic Runtime is in public beta. You can use it in production, but it's quite\nlikely that you'll encounter significant bugs."),(0,r.kt)("p",null,"If you run into a bug or have a suggestion for improvement, please\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/platformatic/platformatic/issues/new"},"raise an issue on GitHub"),"."),(0,r.kt)("h2",{id:"standalone-usage"},"Standalone usage"),(0,r.kt)("p",null,"If you're only interested in the features available in Platformatic Runtime, you can replace ",(0,r.kt)("inlineCode",{parentName:"p"},"platformatic")," with ",(0,r.kt)("inlineCode",{parentName:"p"},"@platformatic/runtime")," in the ",(0,r.kt)("inlineCode",{parentName:"p"},"dependencies")," of your ",(0,r.kt)("inlineCode",{parentName:"p"},"package.json"),", so that you'll import fewer deps."),(0,r.kt)("h2",{id:"example-configuration-file"},"Example configuration file"),(0,r.kt)("p",null,"The following configuration file can be used to start a new Platformatic\nRuntime project. For more details on the configuration file, see the\n",(0,r.kt)("a",{parentName:"p",href:"/docs/0.34.1/reference/runtime/configuration"},"configuration documentation"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "$schema": "https://platformatic.dev/schemas/v0.26.0/runtime",\n  "autoload": {\n    "path": "./packages",\n    "exclude": ["docs"]\n  },\n  "entrypoint": "entrypointApp"\n}\n')),(0,r.kt)("h2",{id:"typescript-compilation"},"TypeScript Compilation"),(0,r.kt)("p",null,"Platformatic Runtime streamlines the compilation of all services built on TypeScript with the command\n",(0,r.kt)("inlineCode",{parentName:"p"},"plt runtime compile"),". The TypeScript compiler (",(0,r.kt)("inlineCode",{parentName:"p"},"tsc"),") is required to be installed separately."),(0,r.kt)("h2",{id:"interservice-communication"},"Interservice communication"),(0,r.kt)("p",null,"The Platformatic Runtime allows multiple microservice applications to run\nwithin a single process. Only the entrypoint binds to an operating system\nport and can be reached from outside of the runtime."),(0,r.kt)("p",null,"Within the runtime, all interservice communication happens by injecting HTTP\nrequests into the running servers, without binding them to ports. This injection\nis handled by\n",(0,r.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/fastify-undici-dispatcher"},(0,r.kt)("inlineCode",{parentName:"a"},"fastify-undici-dispatcher")),"."),(0,r.kt)("p",null,"Each microservice is assigned an internal domain name based on its unique ID.\nFor example, a microservice with the ID ",(0,r.kt)("inlineCode",{parentName:"p"},"awesome")," is given the internal domain\nof ",(0,r.kt)("inlineCode",{parentName:"p"},"http://awesome.plt.local"),". The ",(0,r.kt)("inlineCode",{parentName:"p"},"fastify-undici-dispatcher")," module maps that\ndomain to the Fastify server running the ",(0,r.kt)("inlineCode",{parentName:"p"},"awesome")," microservice. Any Node.js\nAPIs based on Undici, such as ",(0,r.kt)("inlineCode",{parentName:"p"},"fetch()"),", will then automatically route requests\naddressed to ",(0,r.kt)("inlineCode",{parentName:"p"},"awesome.plt.local")," to the corresponding Fastify server."))}u.isMDXComponent=!0}}]);