"use strict";(self.webpackChunkplatformatic_oss_website=self.webpackChunkplatformatic_oss_website||[]).push([[3073],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>d});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},s=Object.keys(e);for(r=0;r<s.length;r++)a=s[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)a=s[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var p=r.createContext({}),l=function(e){var t=r.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},u=function(e){var t=l(e.components);return r.createElement(p.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,s=e.originalType,p=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),c=l(a),f=n,d=c["".concat(p,".").concat(f)]||c[f]||m[f]||s;return a?r.createElement(d,i(i({ref:t},u),{},{components:a})):r.createElement(d,i({ref:t},u))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var s=a.length,i=new Array(s);i[0]=f;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[c]="string"==typeof e?e:n,i[1]=o;for(var l=2;l<s;l++)i[l]=a[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}f.displayName="MDXCreateElement"},23039:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>m,frontMatter:()=>s,metadata:()=>o,toc:()=>l});var r=a(87462),n=(a(67294),a(3905));const s={},i="Migrating an Express app to Platformatic Service",o={unversionedId:"guides/migrating-express-app-to-platformatic-service",id:"version-0.29.0/guides/migrating-express-app-to-platformatic-service",title:"Migrating an Express app to Platformatic Service",description:"Introduction",source:"@site/versioned_docs/version-0.29.0/guides/migrating-express-app-to-platformatic-service.md",sourceDirName:"guides",slug:"/guides/migrating-express-app-to-platformatic-service",permalink:"/docs/0.29.0/guides/migrating-express-app-to-platformatic-service",draft:!1,editUrl:"https://github.com/platformatic/oss/edit/main/versioned_docs/version-0.29.0/guides/migrating-express-app-to-platformatic-service.md",tags:[],version:"0.29.0",frontMatter:{},sidebar:"docs",previous:{title:"Migrating a Fastify app to Platformatic Service",permalink:"/docs/0.29.0/guides/migrating-fastify-app-to-platformatic-service"},next:{title:"Reference",permalink:"/docs/0.29.0/category/reference"}},p={},l=[{value:"Introduction",id:"introduction",level:2},{value:"Example Express application",id:"example-express-application",level:2},{value:"Creating a new Platformatic Service app",id:"creating-a-new-platformatic-service-app",level:2},{value:"Using ES modules",id:"using-es-modules",level:3},{value:"Migrate the Express routes",id:"migrate-the-express-routes",level:2},{value:"Install @fastify/express",id:"install-fastifyexpress",level:3},{value:"Mounting the Express routes",id:"mounting-the-express-routes",level:3},{value:"Configuring the Platformatic Service app",id:"configuring-the-platformatic-service-app",level:3},{value:"Wrapping up",id:"wrapping-up",level:2}],u={toc:l},c="wrapper";function m(e){let{components:t,...a}=e;return(0,n.kt)(c,(0,r.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"migrating-an-express-app-to-platformatic-service"},"Migrating an Express app to Platformatic Service"),(0,n.kt)("h2",{id:"introduction"},"Introduction"),(0,n.kt)("p",null,"Our open-source tools are built on top of the modern and flexible ",(0,n.kt)("a",{parentName:"p",href:"https://www.fastify.io/"},"Fastify")," web framework. It provides logging, request validation and a powerful plugin system out-of-the-box, as well as ",(0,n.kt)("a",{parentName:"p",href:"https://www.fastify.io/benchmarks/"},"incredible performance"),"."),(0,n.kt)("p",null,"If you have an existing ",(0,n.kt)("a",{parentName:"p",href:"http://expressjs.com/"},"Express")," application, migrating it to Fastify could potentially be time consuming, and might not be something that you're able to prioritise right now. You can however still take advantage of Fastify and our open-source tools. In this guide you'll learn how to use the ",(0,n.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/@fastify/express"},(0,n.kt)("inlineCode",{parentName:"a"},"@fastify/express"))," plugin to help you rapidly migrate your existing Express application to use Platformatic Service."),(0,n.kt)("p",null,"This guide assumes that you have some experience building applications with the ",(0,n.kt)("a",{parentName:"p",href:"https://expressjs.com/"},"Express")," framework."),(0,n.kt)("h2",{id:"example-express-application"},"Example Express application"),(0,n.kt)("p",null,"For the purpose of this guide, we have a basic example Express application. Although this app has a specific structure, the migration steps covered in this guide can generally be applied to any Express application."),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"The code for the example Express and migrated Platformatic Service applications is available ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/platformatic/examples/tree/main/applications/deploy-express-app-platformatic-cloud"},"on GitHub"),".")),(0,n.kt)("p",null,"Here's the structure of the example Express application:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"\u251c\u2500\u2500 app.js\n\u251c\u2500\u2500 package.json\n\u251c\u2500\u2500 routes\n\u2502   \u2514\u2500\u2500 users.js\n\u2514\u2500\u2500 server.js\n")),(0,n.kt)("p",null,"It has the following dependencies:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-json"},'// package.json\n\n"dependencies": {\n  "express": "^4.18.2"\n}\n')),(0,n.kt)("p",null,"The application has routes in ",(0,n.kt)("inlineCode",{parentName:"p"},"routes/users.js"),":"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},"// routes/users.js\n\nimport express from 'express'\n\nconst router = express.Router()\n\nrouter.use(express.json())\n\nrouter.post('/', function createUser(request, response, next) {\n  const newUser = request.body\n\n  if (!newUser) {\n    return next(new Error('Error creating user'))\n  }\n\n  response.status(201).json(newUser)\n})\n\nrouter.get('/:user_id', function getUser(request, response, next) {\n  const user = {\n    id: Number(request.params.user_id),\n    first_name: 'Bobo',\n    last_name: 'Oso'\n  }\n\n  response.json(user)\n})\n\nexport const usersRoutes = router\n")),(0,n.kt)("p",null,"In ",(0,n.kt)("inlineCode",{parentName:"p"},"app.js"),", we have a factory function that creates a new Express server instance and mounts the routes:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},"// app.js\n\nimport express from 'express'\n\nimport { usersRoutes } from './routes/users.js'\n\nexport default function buildApp() {\n  const app = express()\n\n  app.use('/users', usersRoutes)\n\n  return app\n}\n")),(0,n.kt)("p",null,"And in ",(0,n.kt)("inlineCode",{parentName:"p"},"server.js")," we're calling the factory function and starting the server listening for HTTP requests:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},"// server.js\n\nimport buildApp from './app.js'\n\nconst express = buildApp()\n\nexpress.listen(3042, () => {\n  console.log('Example app listening at http://localhost:3042')\n})\n")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"The routes in your Express application should be mounted on an Express router (or multiple routers if needed). This will allow them to be mounted using ",(0,n.kt)("inlineCode",{parentName:"p"},"@fastify/express")," when you migrate your app to Platformatic Service.")),(0,n.kt)("h2",{id:"creating-a-new-platformatic-service-app"},"Creating a new Platformatic Service app"),(0,n.kt)("p",null,"To migrate your Express app to Platformatic Service, create a new Platformatic Service app with:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"npm create platformatic@latest\n")),(0,n.kt)("p",null,"Be sure to select ",(0,n.kt)("inlineCode",{parentName:"p"},"Service")," as the project type. You should also say ",(0,n.kt)("inlineCode",{parentName:"p"},"yes")," when you're asked if you want to create the GitHub Actions workflows for deploying your application to Platformatic Cloud."),(0,n.kt)("p",null,"Once the project has been created, you can delete the example ",(0,n.kt)("inlineCode",{parentName:"p"},"plugins")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"routes")," directories."),(0,n.kt)("h3",{id:"using-es-modules"},"Using ES modules"),(0,n.kt)("p",null,"If you're using ES modules in the Express application code that you'll be migrating, ensure that there's a ",(0,n.kt)("inlineCode",{parentName:"p"},"type")," field in ",(0,n.kt)("inlineCode",{parentName:"p"},"package.json")," set to ",(0,n.kt)("inlineCode",{parentName:"p"},"module"),":"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"npm pkg set type=module\n")),(0,n.kt)("h2",{id:"migrate-the-express-routes"},"Migrate the Express routes"),(0,n.kt)("p",null,"Copy over the ",(0,n.kt)("inlineCode",{parentName:"p"},"routes")," directory from your Express app."),(0,n.kt)("h3",{id:"install-fastifyexpress"},"Install @fastify/express"),(0,n.kt)("p",null,"Install the ",(0,n.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/@fastify/express"},(0,n.kt)("inlineCode",{parentName:"a"},"@fastify/express"))," Fastify plugin to add full Express compability to your Platformatic Service app:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"npm install @fastify/express\n")),(0,n.kt)("h3",{id:"mounting-the-express-routes"},"Mounting the Express routes"),(0,n.kt)("p",null,"Create a root Fastify plugin that register's the ",(0,n.kt)("inlineCode",{parentName:"p"},"@fastify/express")," plugin and loads your Express routes:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},"// root-plugin.js\n\nimport { usersRoutes } from './routes/users.js'\n\n/** @param {import('fastify').FastifyInstance} app */\nexport default async function (app) {\n  await app.register(import('@fastify/express'))\n\n  app.use('/users', usersRoutes)\n}\n")),(0,n.kt)("h3",{id:"configuring-the-platformatic-service-app"},"Configuring the Platformatic Service app"),(0,n.kt)("p",null,"Edit your app's ",(0,n.kt)("inlineCode",{parentName:"p"},"platformatic.service.json")," to load your root plugin:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-json"},'// platformatic.service.json\n\n{\n  ...,\n  "plugins": {\n    "paths": [{\n      "path": "./root-plugin.js",\n      "encapsulate": false\n    }],\n    "hotReload": false\n  },\n  "watch": false\n}\n')),(0,n.kt)("p",null,"These settings are important when using ",(0,n.kt)("inlineCode",{parentName:"p"},"@fastify/express")," in a Platformatic Service app:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"encapsulate")," \u2014 You'll need to disable encapsulation for any Fastify plugin which mounts Express routes. This is due to the way that ",(0,n.kt)("inlineCode",{parentName:"li"},"@fastify/express")," works."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"hotReload")," and ",(0,n.kt)("inlineCode",{parentName:"li"},"watch")," \u2014 You'll need to disable hot reloading and watching for your app, as they don't currently work when using ",(0,n.kt)("inlineCode",{parentName:"li"},"@fastify/express"),". This is a known issue that we're working to fix.")),(0,n.kt)("h2",{id:"wrapping-up"},"Wrapping up"),(0,n.kt)("p",null,"You can learn more about building Node.js apps with Platformatic service in the ",(0,n.kt)("a",{parentName:"p",href:"https://oss.platformatic.dev/docs/reference/service/introduction"},"Platformatic Service")," documentation."),(0,n.kt)("p",null,"Once you've migrated your Express app to use Platformatic Service with ",(0,n.kt)("inlineCode",{parentName:"p"},"@fastify/express"),", you might then want to consider fully migrating your Express routes and application code to Fastify. This tutorial shows how you can approach that migration process: ",(0,n.kt)("a",{parentName:"p",href:"https://simonplend.com/how-to-migrate-your-app-from-express-to-fastify/"},"How to migrate your app from Express to Fastify")," (",(0,n.kt)("a",{parentName:"p",href:"https://simonplend.com/learning-fastify-how-to-migrate-your-app-from-express-to-fastify/"},"video"),")."))}m.isMDXComponent=!0}}]);